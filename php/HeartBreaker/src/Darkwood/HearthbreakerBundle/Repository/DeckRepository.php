<?php

namespace Darkwood\HearthbreakerBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * DeckRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DeckRepository extends EntityRepository
{
    public function findAll()
    {
        $qb = $this->createQueryBuilder('d')
            ->select('d, dc, c')
            ->leftJoin('d.cards', 'dc')
            ->leftJoin('dc.card', 'c')
        ;

        return $qb->getQuery()->getResult();
    }

    public function findBySlug($slug, $source = null)
    {
        $qb = $this->createQueryBuilder('d')
            ->select('d, dc, c')
            ->leftJoin('d.cards', 'dc')
            ->leftJoin('dc.card', 'c')
            ->andWhere('d.slug = :slug')->setParameter('slug', $slug)
            ->orderBy('c.cost')
        ;

        if($source) {
            $qb->andWhere('d INSTANCE OF :source')->setParameter('source', $source);
        }

        return $qb->getQuery()->getOneOrNullResult();
    }

    public function search($search)
    {
        $qb = $this->createQueryBuilder('d')
            ->select('d, dc, c')
            ->leftJoin('d.cards', 'dc')
            ->leftJoin('dc.card', 'c')
        ;

        if(isset($search['source']) && $search['source'] != null) {
            $qb->andWhere('c INSTANCE OF :source')->setParameter('source', $search['source']);
        }

        if (isset($search['title']) && $search['title'] != null) {
            $qb->andWhere('d.name LIKE :name')->setParameter('name', '%'.$search['title'].'%');
        }

        if (isset($search['vote_up']) && $search['vote_up'] != null) {
            $qb->andWhere('d.voteUp > :vote_up')->setParameter('vote_up', $search['vote_up']);
        }

        if (isset($search['vote_down']) && $search['vote_down'] != null) {
            $qb->andWhere('d.voteDown > :vote_down')->setParameter('vote_down', $search['vote_down']);
        }

        return $qb->getQuery()->getResult();
    }
}
